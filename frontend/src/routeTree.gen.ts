/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AppImport } from './routes/_app'
import { Route as IndexImport } from './routes/index'
import { Route as AppRecipesImport } from './routes/_app/recipes'
import { Route as AppIngredientsImport } from './routes/_app/ingredients'
import { Route as authLoginImport } from './routes/(auth)/login'
import { Route as authAuthCallbackImport } from './routes/(auth)/auth.callback'

// Create/Update Routes

const AppRoute = AppImport.update({
  id: '/_app',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AppRecipesRoute = AppRecipesImport.update({
  id: '/recipes',
  path: '/recipes',
  getParentRoute: () => AppRoute,
} as any)

const AppIngredientsRoute = AppIngredientsImport.update({
  id: '/ingredients',
  path: '/ingredients',
  getParentRoute: () => AppRoute,
} as any)

const authLoginRoute = authLoginImport.update({
  id: '/(auth)/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const authAuthCallbackRoute = authAuthCallbackImport.update({
  id: '/(auth)/auth/callback',
  path: '/auth/callback',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/login': {
      id: '/(auth)/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authLoginImport
      parentRoute: typeof rootRoute
    }
    '/_app/ingredients': {
      id: '/_app/ingredients'
      path: '/ingredients'
      fullPath: '/ingredients'
      preLoaderRoute: typeof AppIngredientsImport
      parentRoute: typeof AppImport
    }
    '/_app/recipes': {
      id: '/_app/recipes'
      path: '/recipes'
      fullPath: '/recipes'
      preLoaderRoute: typeof AppRecipesImport
      parentRoute: typeof AppImport
    }
    '/(auth)/auth/callback': {
      id: '/(auth)/auth/callback'
      path: '/auth/callback'
      fullPath: '/auth/callback'
      preLoaderRoute: typeof authAuthCallbackImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

interface AppRouteChildren {
  AppIngredientsRoute: typeof AppIngredientsRoute
  AppRecipesRoute: typeof AppRecipesRoute
}

const AppRouteChildren: AppRouteChildren = {
  AppIngredientsRoute: AppIngredientsRoute,
  AppRecipesRoute: AppRecipesRoute,
}

const AppRouteWithChildren = AppRoute._addFileChildren(AppRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof AppRouteWithChildren
  '/login': typeof authLoginRoute
  '/ingredients': typeof AppIngredientsRoute
  '/recipes': typeof AppRecipesRoute
  '/auth/callback': typeof authAuthCallbackRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof AppRouteWithChildren
  '/login': typeof authLoginRoute
  '/ingredients': typeof AppIngredientsRoute
  '/recipes': typeof AppRecipesRoute
  '/auth/callback': typeof authAuthCallbackRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_app': typeof AppRouteWithChildren
  '/(auth)/login': typeof authLoginRoute
  '/_app/ingredients': typeof AppIngredientsRoute
  '/_app/recipes': typeof AppRecipesRoute
  '/(auth)/auth/callback': typeof authAuthCallbackRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/login'
    | '/ingredients'
    | '/recipes'
    | '/auth/callback'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '' | '/login' | '/ingredients' | '/recipes' | '/auth/callback'
  id:
    | '__root__'
    | '/'
    | '/_app'
    | '/(auth)/login'
    | '/_app/ingredients'
    | '/_app/recipes'
    | '/(auth)/auth/callback'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AppRoute: typeof AppRouteWithChildren
  authLoginRoute: typeof authLoginRoute
  authAuthCallbackRoute: typeof authAuthCallbackRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AppRoute: AppRouteWithChildren,
  authLoginRoute: authLoginRoute,
  authAuthCallbackRoute: authAuthCallbackRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_app",
        "/(auth)/login",
        "/(auth)/auth/callback"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_app": {
      "filePath": "_app.tsx",
      "children": [
        "/_app/ingredients",
        "/_app/recipes"
      ]
    },
    "/(auth)/login": {
      "filePath": "(auth)/login.tsx"
    },
    "/_app/ingredients": {
      "filePath": "_app/ingredients.tsx",
      "parent": "/_app"
    },
    "/_app/recipes": {
      "filePath": "_app/recipes.tsx",
      "parent": "/_app"
    },
    "/(auth)/auth/callback": {
      "filePath": "(auth)/auth.callback.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
