/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as authLoginImport } from './routes/(auth)/login'
import { Route as appRecipesImport } from './routes/(app)/_recipes'
import { Route as appIngredientsImport } from './routes/(app)/_ingredients'
import { Route as appRecipesRecipesImport } from './routes/(app)/_recipes/recipes'
import { Route as appIngredientsIngredientsImport } from './routes/(app)/_ingredients/ingredients'

// Create Virtual Routes

const appImport = createFileRoute('/(app)')()

// Create/Update Routes

const appRoute = appImport.update({
  id: '/(app)',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const authLoginRoute = authLoginImport.update({
  id: '/(auth)/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const appRecipesRoute = appRecipesImport.update({
  id: '/_recipes',
  getParentRoute: () => appRoute,
} as any)

const appIngredientsRoute = appIngredientsImport.update({
  id: '/_ingredients',
  getParentRoute: () => appRoute,
} as any)

const appRecipesRecipesRoute = appRecipesRecipesImport.update({
  id: '/recipes',
  path: '/recipes',
  getParentRoute: () => appRecipesRoute,
} as any)

const appIngredientsIngredientsRoute = appIngredientsIngredientsImport.update({
  id: '/ingredients',
  path: '/ingredients',
  getParentRoute: () => appIngredientsRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/(app)': {
      id: '/(app)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof appImport
      parentRoute: typeof rootRoute
    }
    '/(app)/_ingredients': {
      id: '/(app)/_ingredients'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof appIngredientsImport
      parentRoute: typeof appRoute
    }
    '/(app)/_recipes': {
      id: '/(app)/_recipes'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof appRecipesImport
      parentRoute: typeof appImport
    }
    '/(auth)/login': {
      id: '/(auth)/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authLoginImport
      parentRoute: typeof rootRoute
    }
    '/(app)/_ingredients/ingredients': {
      id: '/(app)/_ingredients/ingredients'
      path: '/ingredients'
      fullPath: '/ingredients'
      preLoaderRoute: typeof appIngredientsIngredientsImport
      parentRoute: typeof appIngredientsImport
    }
    '/(app)/_recipes/recipes': {
      id: '/(app)/_recipes/recipes'
      path: '/recipes'
      fullPath: '/recipes'
      preLoaderRoute: typeof appRecipesRecipesImport
      parentRoute: typeof appRecipesImport
    }
  }
}

// Create and export the route tree

interface appIngredientsRouteChildren {
  appIngredientsIngredientsRoute: typeof appIngredientsIngredientsRoute
}

const appIngredientsRouteChildren: appIngredientsRouteChildren = {
  appIngredientsIngredientsRoute: appIngredientsIngredientsRoute,
}

const appIngredientsRouteWithChildren = appIngredientsRoute._addFileChildren(
  appIngredientsRouteChildren,
)

interface appRecipesRouteChildren {
  appRecipesRecipesRoute: typeof appRecipesRecipesRoute
}

const appRecipesRouteChildren: appRecipesRouteChildren = {
  appRecipesRecipesRoute: appRecipesRecipesRoute,
}

const appRecipesRouteWithChildren = appRecipesRoute._addFileChildren(
  appRecipesRouteChildren,
)

interface appRouteChildren {
  appIngredientsRoute: typeof appIngredientsRouteWithChildren
  appRecipesRoute: typeof appRecipesRouteWithChildren
}

const appRouteChildren: appRouteChildren = {
  appIngredientsRoute: appIngredientsRouteWithChildren,
  appRecipesRoute: appRecipesRouteWithChildren,
}

const appRouteWithChildren = appRoute._addFileChildren(appRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof appIngredientsRouteWithChildren
  '': typeof appRecipesRouteWithChildren
  '/login': typeof authLoginRoute
  '/ingredients': typeof appIngredientsIngredientsRoute
  '/recipes': typeof appRecipesRecipesRoute
}

export interface FileRoutesByTo {
  '/': typeof appIngredientsRouteWithChildren
  '': typeof appRecipesRouteWithChildren
  '/login': typeof authLoginRoute
  '/ingredients': typeof appIngredientsIngredientsRoute
  '/recipes': typeof appRecipesRecipesRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/(app)': typeof appRouteWithChildren
  '/(app)/_ingredients': typeof appIngredientsRouteWithChildren
  '/(app)/_recipes': typeof appRecipesRouteWithChildren
  '/(auth)/login': typeof authLoginRoute
  '/(app)/_ingredients/ingredients': typeof appIngredientsIngredientsRoute
  '/(app)/_recipes/recipes': typeof appRecipesRecipesRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '' | '/login' | '/ingredients' | '/recipes'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '' | '/login' | '/ingredients' | '/recipes'
  id:
    | '__root__'
    | '/'
    | '/(app)'
    | '/(app)/_ingredients'
    | '/(app)/_recipes'
    | '/(auth)/login'
    | '/(app)/_ingredients/ingredients'
    | '/(app)/_recipes/recipes'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  appRoute: typeof appRouteWithChildren
  authLoginRoute: typeof authLoginRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  appRoute: appRouteWithChildren,
  authLoginRoute: authLoginRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/(app)",
        "/(auth)/login"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/(app)": {
      "filePath": "(app)",
      "children": [
        "/(app)/_ingredients",
        "/(app)/_recipes"
      ]
    },
    "/(app)/_ingredients": {
      "filePath": "(app)/_ingredients.tsx",
      "parent": "/(app)",
      "children": [
        "/(app)/_ingredients/ingredients"
      ]
    },
    "/(app)/_recipes": {
      "filePath": "(app)/_recipes.tsx",
      "parent": "/(app)",
      "children": [
        "/(app)/_recipes/recipes"
      ]
    },
    "/(auth)/login": {
      "filePath": "(auth)/login.tsx"
    },
    "/(app)/_ingredients/ingredients": {
      "filePath": "(app)/_ingredients/ingredients.tsx",
      "parent": "/(app)/_ingredients"
    },
    "/(app)/_recipes/recipes": {
      "filePath": "(app)/_recipes/recipes.tsx",
      "parent": "/(app)/_recipes"
    }
  }
}
ROUTE_MANIFEST_END */
